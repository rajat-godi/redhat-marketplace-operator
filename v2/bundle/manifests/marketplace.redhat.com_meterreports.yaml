apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: redhat-marketplace-operator
  name: meterreports.marketplace.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type == "JobRunning")].status
    name: RUNNING
    type: string
  - JSONPath: .status.conditions[?(@.type == "JobRunning")].reason
    name: REASON
    type: string
  - JSONPath: .status.metricUploadCount
    name: METRICS
    type: string
  group: marketplace.redhat.com
  names:
    kind: MeterReport
    listKind: MeterReportList
    plural: meterreports
    singular: meterreport
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MeterReport is the Schema for the meterreports API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MeterReportSpec defines the desired state of MeterReport
          properties:
            endTime:
              description: EndTime of the job
              format: date-time
              type: string
            extraJobArgs:
              description: ExtraArgs is a set of arguments to pass to the job
              items:
                type: string
              type: array
            meterDefinitions:
              description: MeterDefinitions is the list of meterDefinitions included in the report
              items:
                description: MeterDefinition defines the meter workloads used to enable pay for use billing.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: MeterDefinitionSpec defines the desired metering spec
                    properties:
                      installedBy:
                        description: InstalledBy is a reference to the CSV that install the meter definition. This is used to determine an operator group.
                        properties:
                          groupVersionKind:
                            description: GroupVersionKind of the resource
                            properties:
                              apiVersion:
                                description: APIVersion of the CRD
                                type: string
                              kind:
                                description: Kind of the CRD
                                type: string
                            required:
                            - apiVersion
                            - kind
                            type: object
                          name:
                            description: Name of the resource Required
                            type: string
                          namespace:
                            description: Namespace of the resource Required
                            type: string
                          uid:
                            description: Namespace of the resource
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      meterGroup:
                        description: Group defines the operator group of the meter
                        type: string
                      meterKind:
                        description: Kind defines the primary CRD kind of the meter
                        type: string
                      meterVersion:
                        description: Version defines the primary CRD version of the meter. This field is no longer used.
                        type: string
                      podMeterLabels:
                        description: PodMeterLabels name of the prometheus metrics you want to track. User workloads instead.
                        items:
                          type: string
                        type: array
                      serviceMeterLabels:
                        description: ServiceMeterLabels name of the meterics you want to track. Use workloads instead.
                        items:
                          type: string
                        type: array
                      workloadVertexLabelSelectors:
                        description: VertexFilters are used when Namespace is selected. Can be omitted if you select OperatorGroup
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      workloadVertexType:
                        description: WorkloadVertexType is the top most object of a workload. It allows you to identify the upper bounds of your workloads.
                        enum:
                        - Namespace
                        - OperatorGroup
                        type: string
                      workloads:
                        description: Workloads identify the workloads to meter.
                        items:
                          description: Workload helps identify what to target for metering.
                          properties:
                            annotationSelector:
                              description: AnnotationSelector are used to filter to the correct workload.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                            labelSelector:
                              description: LabelSelector are used to filter to the correct workload.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                            metricLabels:
                              description: MetricLabels are the labels to collect
                              items:
                                description: MeterLabelQuery helps define a meter label to build and search for
                                properties:
                                  aggregation:
                                    description: Aggregation to use with the query
                                    enum:
                                    - sum
                                    - min
                                    - max
                                    - avg
                                    type: string
                                  label:
                                    description: Label is the name of the meter
                                    type: string
                                  query:
                                    description: Query to use for the label
                                    type: string
                                required:
                                - label
                                type: object
                              minItems: 1
                              type: array
                            name:
                              description: Name of the workload, must be unique in a meter definition.
                              type: string
                            ownerCRD:
                              description: OwnerCRD is the name of the GVK to look for as the owner of all the meterable assets. If omitted, the labels and annotations are used instead.
                              properties:
                                apiVersion:
                                  description: APIVersion of the CRD
                                  type: string
                                kind:
                                  description: Kind of the CRD
                                  type: string
                              required:
                              - apiVersion
                              - kind
                              type: object
                            type:
                              description: WorkloadType identifies the type of workload to look for. This can be pod or service right now.
                              enum:
                              - Pod
                              - Service
                              - PersistentVolumeClaim
                              type: string
                          required:
                          - name
                          - type
                          type: object
                        minItems: 1
                        type: array
                    required:
                    - meterGroup
                    - meterKind
                    type: object
                  status:
                    description: MeterDefinitionStatus defines the observed state of MeterDefinition
                    properties:
                      conditions:
                        description: Conditions represent the latest available observations of an object's state
                        items:
                          description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                              type: string
                            status:
                              type: string
                            type:
                              description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type: array
                      results:
                        description: Results is a list of Results that get returned from a query to prometheus
                        items:
                          description: Result is a result of a query defined on the meterdefinition. This will generate data for the previous hour on whichever workload you specify. This will allow you to check whether a query is working as intended.
                          properties:
                            metricName:
                              description: MetricName is the identifier that you will use to identify your query
                              type: string
                            query:
                              description: Query is the compiled query that is given to Prometheus
                              type: string
                            values:
                              description: Values are the results of the query
                              items:
                                description: ResultValues will hold the results of the prometheus query
                                properties:
                                  timestamp:
                                    format: int64
                                    type: integer
                                  value:
                                    type: string
                                required:
                                - timestamp
                                - value
                                type: object
                              type: array
                          type: object
                        type: array
                      workloadResource:
                        description: WorkloadResources is the list of resoruces discovered by this meter definition
                        items:
                          description: WorkloadResource represents the resources associated to a workload
                          properties:
                            groupVersionKind:
                              description: GroupVersionKind of the resource
                              properties:
                                apiVersion:
                                  description: APIVersion of the CRD
                                  type: string
                                kind:
                                  description: Kind of the CRD
                                  type: string
                              required:
                              - apiVersion
                              - kind
                              type: object
                            name:
                              description: Name of the resource Required
                              type: string
                            namespace:
                              description: Namespace of the resource Required
                              type: string
                            referencedWorkloadName:
                              description: ReferencedWorkloadName is the name of the workload
                              type: string
                            uid:
                              description: Namespace of the resource
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            prometheusService:
              description: PrometheusService is the definition for the service labels.
              properties:
                basicAuth:
                  description: BasicAuth allow an endpoint to authenticate over basic authentication Optional
                  properties:
                    ca:
                      description: Struct containing the CA cert to use for the targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    caFile:
                      description: Path to the CA cert in the Prometheus container to use for the targets.
                      type: string
                    cert:
                      description: Struct containing the client cert file for the targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    certFile:
                      description: Path to the client cert file in the Prometheus container for the targets.
                      type: string
                    insecureSkipVerify:
                      description: Disable target certificate validation.
                      type: boolean
                    keyFile:
                      description: Path to the client key file in the Prometheus container for the targets.
                      type: string
                    keySecret:
                      description: Secret containing the client key file for the targets.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    serverName:
                      description: Used to verify the hostname for the targets.
                      type: string
                  type: object
                bearerTokenFile:
                  description: File to read bearer token for scraping targets.
                  type: string
                bearerTokenSecret:
                  description: Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the service monitor and accessible by the Prometheus Operator.
                  properties:
                    key:
                      description: The key of the secret to select from.  Must be a valid secret key.
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                    optional:
                      description: Specify whether the Secret or its key must be defined
                      type: boolean
                  required:
                  - key
                  type: object
                name:
                  description: Name of the job Required
                  type: string
                namespace:
                  description: Namespace of the job Required
                  type: string
                targetPort:
                  anyOf:
                  - type: integer
                  - type: string
                  description: Port name is the name of the part to select Required
                  x-kubernetes-int-or-string: true
                tlsConfig:
                  description: TLS configuration to use when scraping the endpoint Optional
                  properties:
                    ca:
                      description: Struct containing the CA cert to use for the targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    caFile:
                      description: Path to the CA cert in the Prometheus container to use for the targets.
                      type: string
                    cert:
                      description: Struct containing the client cert file for the targets.
                      properties:
                        configMap:
                          description: ConfigMap containing data to use for the targets.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        secret:
                          description: Secret containing data to use for the targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    certFile:
                      description: Path to the client cert file in the Prometheus container for the targets.
                      type: string
                    insecureSkipVerify:
                      description: Disable target certificate validation.
                      type: boolean
                    keyFile:
                      description: Path to the client key file in the Prometheus container for the targets.
                      type: string
                    keySecret:
                      description: Secret containing the client key file for the targets.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    serverName:
                      description: Used to verify the hostname for the targets.
                      type: string
                  type: object
              required:
              - name
              - namespace
              - targetPort
              type: object
            startTime:
              description: StartTime of the job
              format: date-time
              type: string
          required:
          - endTime
          - prometheusService
          - startTime
          type: object
        status:
          description: MeterReportStatus defines the observed state of MeterReport
          properties:
            conditions:
              description: Conditions represent the latest available observations of an object's stateonfig
              items:
                description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                    type: string
                  status:
                    type: string
                  type:
                    description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            jobReference:
              description: A list of pointers to currently running jobs.
              properties:
                active:
                  description: The number of actively running pods.
                  format: int32
                  type: integer
                backoffLimit:
                  description: Specifies the number of retries before marking this job failed. Defaults to 6
                  format: int32
                  type: integer
                completionTime:
                  description: Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.
                  format: date-time
                  type: string
                failed:
                  description: The number of pods which reached phase Failed.
                  format: int32
                  type: integer
                jobFailed:
                  description: JobFailed is the boolean value set if the job failed
                  type: boolean
                jobSuccess:
                  description: JobSuccess is the boolean value set if the job succeeded
                  type: boolean
                name:
                  description: Name of the job Required
                  type: string
                namespace:
                  description: Namespace of the job Required
                  type: string
                startTime:
                  description: Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.
                  format: date-time
                  type: string
                succeeded:
                  description: The number of pods which reached phase Succeeded.
                  format: int32
                  type: integer
              required:
              - name
              - namespace
              type: object
            metricUploadCount:
              description: MetricUploadCount is the number of metrics in the report
              type: integer
            queryErrorList:
              description: QueryErrorList shows if there were any errors from queries for the report.
              items:
                type: string
              type: array
            uploadUID:
              description: UploadID is the ID associated with the upload
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
